from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from django.contrib.sites import requests

from keyboards.inline.back_kb import back
from keyboards.inline.edit_self_keyboard import edit_kb
from loader import dp
from states.get_info import GetInfo
from utils.db_api.db_commands import get_user, update_name


@dp.callback_query_handler(Text(equals='go_edit'))
async def go_edit(call: types.CallbackQuery):
    data = await get_user(telegram_id=call.from_user.id)
    name = data.name
    nickname = data.nickname
    age = data.age

    await call.message.edit_text('üëå –û—Ç–ª–∏—á–Ω–æ!\n'
                                 'üìò –¢–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–µ–∫—É—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–±–µ:\n'
                                 f'‚ñ´Ô∏è –ò–º—è: {"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ" if name is None else name}\n'
                                 f'‚ñ´Ô∏è –ù–∏–∫–Ω–µ–π–º: {"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ" if nickname is None else nickname}\n'
                                 f'‚ñ´Ô∏è –í–æ–∑—Ä–∞—Å—Ç: {"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ" if age is None else age}\n\n'
                                 f'üëá –í—ã–±–µ—Ä–∏ —Ç–æ, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–∑–º–µ–Ω–∏—Ç—å.', reply_markup=edit_kb)


@dp.message_handler(text='üìù –ò–∑–º–µ–Ω–∏—Ç—å "–û —Å–µ–±–µ"')
async def edit_btn(message: types.Message):
    await message.delete()

    await dp.bot.delete_message(
        chat_id=message.chat.id,
        message_id=message.message_id - 1
    )
    data = await get_user(telegram_id=message.from_user.id)
    name = data.name
    nickname = data.nickname
    age = data.age

    await message.answer('üëå –û—Ç–ª–∏—á–Ω–æ!\n'
                         'üìò –¢–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–µ–∫—É—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–±–µ:\n'
                         f'‚ñ´Ô∏è –ò–º—è: {"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ" if name is None else name}\n'
                         f'‚ñ´Ô∏è –ù–∏–∫–Ω–µ–π–º: {"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ" if nickname is None else nickname}\n'
                         f'‚ñ´Ô∏è –í–æ–∑—Ä–∞—Å—Ç: {"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ" if age is None else age}\n\n'
                         f'üëá –í—ã–±–µ—Ä–∏ —Ç–æ, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–∑–º–µ–Ω–∏—Ç—å.', reply_markup=edit_kb)


@dp.callback_query_handler(Text(equals='edit_name'))
async def edit_user_name(call: types.CallbackQuery):
    await call.message.edit_text('üî∑ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –Ω–æ–≤–æ–µ –∏–º—è')
    await GetInfo.name.set()


@dp.message_handler(state=GetInfo.name)
async def get_name(message: types.Message, state: FSMContext):
    name = message.text
    await update_name(telegram_id=message.from_user.id,
                      name=name)
    await message.delete()

    await dp.bot.delete_message(
        chat_id=message.chat.id,
        message_id=message.message_id - 1
    )

    await message.answer(f'‚úÖ –¢–µ–ø–µ—Ä—å —è –∑–Ω–∞—é, —á—Ç–æ –≤–∞—Å –∑–æ–≤—É—Ç - {name}', reply_markup=back)
    await state.reset_state(True)


@dp.callback_query_handler(Text(equals='edit_nickname'))
async def edit_user_nickname(call: types.CallbackQuery):
    await call.message.edit_text('üî∑ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º')
    await GetInfo.nickname.set()


@dp.message_handler(state=GetInfo.nickname)
async def get_nickname(message: types.Message, state: FSMContext):
    nickname = message.text

    await message.delete()

    await dp.bot.delete_message(
        chat_id=message.chat.id,
        message_id=message.message_id - 1
    )

    await message.answer(f'‚úÖ –¢–µ–ø–µ—Ä—å —è –∑–Ω–∞—é, —á—Ç–æ –≤–∞—à –Ω–∏–∫–Ω–µ–π–º - {nickname}', reply_markup=back)
    await state.reset_state(True)


@dp.callback_query_handler(Text(equals='edit_age'))
async def edit_user_age(call: types.CallbackQuery):
    await call.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç')
    await GetInfo.age.set()


@dp.message_handler(state=GetInfo.age)
async def get_age(message: types.Message, state: FSMContext):
    age = message.text

    if age.isdigit():

        await message.delete()

        await dp.bot.delete_message(
            chat_id=message.chat.id,
            message_id=message.message_id - 1
        )

        await message.answer(f'–¢–µ–ø–µ—Ä—å —è –∑–Ω–∞—é, —á—Ç–æ —Ç–µ–±–µ {age} –ª–µ—Ç', reply_markup=back)
        await state.reset_state(True)

    else:
        await message.answer('–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
